framework:
    messenger:
        # Uncomment this (and the failed transport below) to send failed messages to this transport for later handling.
        # failure_transport: failed
        default_bus: command.bus
        buses:
            command.bus:
                middleware:
                    - validation
                    - doctrine_transaction
            query.bus:
                middleware:
                    - validation
            event.bus:
                default_middleware: allow_no_handlers
                middleware:
                    - validation

        transports:
            # https://symfony.com/doc/current/messenger.html#transport-configuration
            async:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                #                serializer: messenger.transport.symfony_serializer
            sync:
                dsn: 'sync://'
                #                serializer: messenger.transport.symfony_serializer
            command:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
#                serializer: messenger.transport.symfony_serializer
            query:
                dsn: 'sync://'
#                serializer: messenger.transport.symfony_serializer
            domainEvent:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
#                serializer: messenger.transport.symfony_serializer
            failed: 'doctrine://default?queue_name=failed'

        routing:
            # Route your messages to the transports
            # 'Cuadrik\Message\YourMessage': async
            'Cuadrik\Crm\Shared\Domain\Bus\Command\Command': sync
            'Cuadrik\Crm\Shared\Domain\Bus\Command\SyncCommand': sync
            'Cuadrik\Crm\Shared\Domain\Bus\Query\Query': query
            'Cuadrik\Crm\Shared\Domain\Bus\Event\DomainEvent': domainEvent





# test/messenger.yaml content
#
#framework:
#    messenger:
#        transports:
#            sync: 'in-memory://'
#            async: 'in-memory://'
#            async_priority_high: 'in-memory://'
